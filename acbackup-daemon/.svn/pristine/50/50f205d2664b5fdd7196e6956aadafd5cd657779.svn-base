package sga.sol.ac.acotp.daemon.codec;

import java.io.ByteArrayOutputStream;

import org.apache.mina.core.buffer.IoBuffer;
import org.apache.mina.core.session.IoSession;
import org.apache.mina.filter.codec.ProtocolEncoderAdapter;
import org.apache.mina.filter.codec.ProtocolEncoderOutput;
import org.tinyradius.packet.RadiusPacket;

import sga.sol.ac.acotp.daemon.server.ResponseMessage;

public class AcOtpEncoder extends ProtocolEncoderAdapter {
	private String sharedSecret;
	
	public AcOtpEncoder(String sharedSecret) {
		this.sharedSecret = sharedSecret;
	}
	
	private String getSharedSecret(){
		return this.sharedSecret;
	}
	
	@Override
	public void encode(IoSession session, Object message, ProtocolEncoderOutput out) throws Exception {
		ResponseMessage responseMessage = (ResponseMessage)message;
		RadiusPacket request = responseMessage.getRequest();
		RadiusPacket response = responseMessage.getResponse();
		
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		response.encodeResponsePacket(bos, getSharedSecret(), request);
		byte[] data = bos.toByteArray();
		
		IoBuffer buffer = IoBuffer.allocate(data.length, false);
		buffer.put(data, 0, data.length);
		buffer.flip();
		
		out.write(buffer);
	}
}
