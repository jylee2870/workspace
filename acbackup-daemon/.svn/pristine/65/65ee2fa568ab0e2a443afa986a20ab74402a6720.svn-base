package sga.sol.ac.acotp.daemon.handler;

import java.net.InetSocketAddress;

import org.apache.mina.core.service.IoHandler;
import org.apache.mina.core.session.IdleStatus;
import org.apache.mina.core.session.IoSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.tinyradius.packet.AccessRequest;
import org.tinyradius.packet.RadiusPacket;

import sga.sol.ac.acotp.daemon.process.PacketProcess;
import sga.sol.ac.acotp.daemon.process.ServiceProcess;
import sga.sol.ac.acotp.daemon.server.ResponseMessage;

@Component
public class RadiusServerHandler implements IoHandler {
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private PacketProcess packetProcess;
	
	@Autowired
	private ServiceProcess serviceProcess;
	
	@Override
	public void sessionCreated(IoSession session) throws Exception {
		//logger.info("session created.... session:{}", session.getId());
	}
	
	@Override
	public void sessionOpened(IoSession session) throws Exception {
		//logger.info("session opened.... session:{}", session.getId());
	}

	@Override
	public void sessionClosed(IoSession session) throws Exception {
		//logger.info("session closed.... session:{}", session.getId());
	}

	@Override
	public void sessionIdle(IoSession session, IdleStatus status) throws Exception {
		// TODO Auto-generated method stub
	}

	@Override
	public void exceptionCaught(IoSession session, Throwable cause) throws Exception {
		// TODO Auto-generated method stub
	}

	@Override
	public void messageReceived(IoSession session, Object message) throws Exception {
		logger.info("message received.... session:{}", session.getId());
		
		RadiusPacket requestPacket = (RadiusPacket)message;
		RadiusPacket responsePacket = null;
		
		String address = ((InetSocketAddress)session.getRemoteAddress()).getAddress().getHostAddress();
		if (!packetProcess.isPacketDuplicate(requestPacket, (InetSocketAddress)session.getRemoteAddress() ) ) {
			responsePacket = serviceProcess.accessRequestReceived( (AccessRequest)requestPacket, address );
			packetProcess.copyProxyState(requestPacket, responsePacket);
		}

		ResponseMessage responseMessage = new ResponseMessage(requestPacket, responsePacket);		
		
		session.write(responseMessage);
		session.closeNow();
	}
	
	@Override
	public void messageSent(IoSession session, Object message) throws Exception {
		logger.info("message sent.... session:{}", session.getId());
	}

	@Override
	public void inputClosed(IoSession session) throws Exception {
		// TODO Auto-generated method stub

	}

}
