<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sql">
	<resultMap id="EquipVendorResult" type="EquipVendor">
		<id column="recid" property="recid"/>
		<result column="company_name" property="companyName"/>
		<result column="create_dt" property="createDt"/>
		<result column="create_user" property="createUser"/>
		<result column="create_ip" property="createIp"/>
		<result column="update_dt" property="updateDt"/>
		<result column="update_user" property="updateUser"/>
		<result column="update_ip" property="updateIp"/>
	</resultMap>
	
	<sql id="selectEquipVendorInfo">
		SELECT *
		FROM equip_vendor
	</sql>
	
	<!-- equip_vendor 테이블 조회 카운트 -->
	<select id="getEquipVendorListCount" resultType="int" parameterType="map">
		SELECT COUNT(0) AS count
		FROM equip_vendor
		<where>
			<if test='entity.companyName != null and entity.companyName != ""'>
				AND company_name LIKE '%' + #{entity.companyName} + '%'
			</if>
			<if test='extraParams != null'>
				<choose>
					<when test='(extraParams.startDate != null and extraParams.startDate != "") and (extraParams.endDate != null and extraParams.endDate !="")'>
						AND CONVERT(date, create_dt) BETWEEN CONVERT(date, #{extraParams.startDate}) AND CONVERT(date, #{extraParams.endDate})
					</when>
					<when test='(extraParams.startDate != null and extraParams.startDate != "")'>
						AND CONVERT(date, create_dt) >= CONVERT(date, #{extraParams.startDate})
					</when>
					<when test='(extraParams.endDate != null and extraParams.endDate != "")'>
						AND CONVERT(date, #{extraParams.endDate}) >= CONVERT(date, create_dt)
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- equip_vendor 테이블 조회 -->
	<select id="selectEquipVendorList" parameterType="map" resultMap="EquipVendorResult">
		SELECT * FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY ${sort.sortFieldNm} ${sort.sortDir}) AS rownum,
				recid,
				company_name,
				create_dt,
				create_ip,
				create_user,
				update_dt,
				update_ip,
				update_user
			FROM equip_vendor
			<where>
				<if test='entity.companyName != null and entity.companyName != ""'>
					AND company_name LIKE '%' + #{entity.companyName} + '%'
				</if>
				<if test='extraParams != null'>
					<choose>
						<when test='(extraParams.startDate != null and extraParams.startDate != "") and (extraParams.endDate != null and extraParams.endDate !="")'>
							AND CONVERT(date, create_dt) BETWEEN CONVERT(date, #{extraParams.startDate}) AND CONVERT(date, #{extraParams.endDate})
						</when>
						<when test='(extraParams.startDate != null and extraParams.startDate != "")'>
							AND CONVERT(date, create_dt) >= CONVERT(date, #{extraParams.startDate})
						</when>
						<when test='(extraParams.endDate != null and extraParams.endDate != "")'>
							AND CONVERT(date, #{extraParams.endDate}) >= CONVERT(date, create_dt)
						</when>
					</choose>
				</if>
			</where>
		) N
		<where>
			<if test="page != null">
				N.rownum BETWEEN #{page.startPage} AND #{page.endPage}
			</if>
		</where>
	</select>
	
	<select id="selectEquipVendorByParam" parameterType="EquipVendor" resultMap="EquipVendorResult">
		<include refid="selectEquipVendorInfo" />
		<where>
			<if test='recid > 0'>
				AND recid = #{recid}
			</if>
			<if test='companyName != null and companyName != ""'>
				AND company_name = #{companyName}
			</if>
		</where>
	</select>
	
	<insert id="insertEquipVendor" parameterType="EquipVendor">
		INSERT INTO equip_vendor (
			company_name,
			create_dt,
			create_ip,
			create_user
		)
		VALUES (
			#{companyName},
			getdate(),
			#{createIp},
			#{createUser}
		)
	</insert>
	
	<update id="updateEquipVendor" parameterType="EquipVendor">
		UPDATE equip_vendor SET
			company_name = #{companyName},
			update_dt = getdate(),
			update_ip = #{updateIp},
			update_user = #{updateUser}
		WHERE recid = #{recid}
	</update>
	
	<delete id="deleteEquipVendor" parameterType="int">
		DELETE FROM equip_vendor WHERE recid = #{recid}
	</delete>
	
		<!-- 장비-서비스정보 삭제 by recid 리스트 -->
	<delete id="deleteEquipVendorByRecidList" parameterType="list">
		DELETE FROM equip_vendor
		WHERE recid IN
		<foreach collection="list" item="id"  open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<update id="updateEquipVendorNameForDelete" parameterType="list">
		UPDATE equip_info SET
			vendor_name = '기타'
		WHERE vendor_name IN 
		<foreach collection="list" item="id"  open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	
</mapper>